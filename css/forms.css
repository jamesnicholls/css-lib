/**
 *
 * A framework for the basic layout of form elements. It is based on the three variations of form layout propsed by Luke Wroblewski here: http://www.uie.com/articles/web_forms/
 * James Nicholls <jamesnicholls11@gmail.com>
 */
form
{
    width: 100%;
}

fieldset
{
    clear: both;
}

/* Each label-field pair is wrapped in a list item. This makes styling easier in IE 6 & 7 and adds a semantic wrapper to pairs */
form li
{
	margin-bottom: 1em; /* This is purely aesthetic */
    _height: 1%; /* Force hasLayout in IE 6, in order to clear floats */
}

form li:after /* Clear floats in standards-compliant browsers */
{
    content: '.';
    visibility: hidden;
    display: block;
    height: 0;
    clear: both;
}

label,
select,
input,
textarea
{
    display: block;
}

input[size] /* Attribute selector will not work in IE <= 7 */
{
    width: auto;
}

label
{
    font-weight: bold;
    clear: left;
}

label:after
{
    content: ":";
}

form .additional /* Use this class to add an additional form element to a field-label combination */
{
    clear: left;
    margin-top: 0.5em;
}

form .placeholder /* Apply this class to input elements that contain placeholder content. The styles are purely aesthetic */
{
    color: #999;
    font-style: italic;
}

form .hint /* Use this class for descriptive text, format information, validation etc. for a field */
{
    font-size: 0.8em;
    position: relative;
    clear: left;
    margin-top: 0.6em;
}

button
{
    float: left;
}

button.primary-action
{
    font-weight: bold;
}

button+button
{
    margin-left: 2%;
    color: #666;
}

button+a
{
    display: block;
    float: left;
    margin-left: 2%;
}

/**
 * =option set component
 * Use option sets for sets of radio buttons or check boxes
 */
.option-set
{
    position: relative;
    *height: 1%; /* Force hasLayout in IE 6 & 7, in order to clear floats */
}

.options-set:after /* Clear floats in standards-compliant browsers */
{
    content: '.';
    display: block;
    clear: both;
    height: 0;
    visibility: none;
}

.option-set p
{
    margin-left: 0;
    font-weight: bold;
}

.option-set p:after
{
    content: ":";
}

.option-set label
{
    float: right;
    width: 95%;
    text-align: left;
    font-weight: normal;
}

.option-set label:after
{
    content: "";
}

.option-set input
{
    float: left;
    margin-bottom: .5em;
    margin-top: 0;
}

/**
 * =horizontal form component
 * Horizontal class lines up fields and labels side-by-side. Can apply additional .left-aligned class to align the labels along the left side of the form. Otherwise the elements will be aligned to the left side of the fields
 */
.horizontal label,
.horizontal select,
.horizontal input,
.horizontal textarea
{
    float: none;
    display: inline-block;
    vertical-align: baseline;
}

.horizontal label
{
    width: 50%;
    text-align: right;
    padding-right: 1%;
    font-weight: normal;
    clear: none;
}

.horizontal label:after
{
    content: none;
}

.horizontal.left-aligned label
{
    text-align: left;
}

.horizontal .additional
{
    margin-left: 52%;
}

form.horizontal p
{
    clear: left;
    margin-left: 52%;
}

.horizontal .primary-action
{
    margin-left: 52%;
}

.horizontal .option-set p
{
    width: 50%;
    margin-left: 0;
    text-align: right;
    font-weight: normal;
    float: left;
}

.horizontal .option-set p:after
{
    content: '';
}

.horizontal.left-aligned .option-set p
{
    text-align: left;
}

.horizontal .option-set label
{
    text-align: left;
    float: right;
    width: 44%;
}

.horizontal .option-set input
{
    vertical-align: top;
    margin-left: 51%;
    display: block;
}